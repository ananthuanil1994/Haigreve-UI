{"ast":null,"code":"var _jsxFileName = \"/Users/factweavers/Sites/haigreve-ui/src/Components/SelectElement/index.js\";\nimport React from 'react';\nimport { Select } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SelectElement = props => {\n  function onBlur() {}\n\n  function onFocus() {}\n\n  function onSearch(val) {}\n\n  return /*#__PURE__*/_jsxDEV(Select, {\n    showArrow: props.showArrow,\n    allowClear: props.allowClear,\n    showSearch: props.showSearch,\n    tokenSeparators: props.tokenSeparators,\n    style: props.style,\n    mode: props.mode,\n    placeholder: props.placeholder || 'Select option',\n    optionFilterProp: \"children\",\n    onChange: props.onChange,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    maxTagCount: props.maxTagCount || 10,\n    onSearch: props.showSearch && onSearch,\n    defaultValue: props.defaultValue,\n    value: props.value,\n    className: `${props.className || ''} ${!props.isValid ? ' error-field' : ''}`,\n    filterOption: filterOptions,\n    options: props.optionList.map(_ref => {\n      let {\n        value,\n        label\n      } = _ref;\n      return {\n        value,\n        label\n      };\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = SelectElement;\n\nfunction filterOptions() {\n  let input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (option.props && option.props.label && option.props.value) return option.props.label.toLowerCase().indexOf(input.toLowerCase()) >= 0 || option.props.value.toLowerCase().indexOf(input.toLowerCase()) >= 0;else if (option.value) return option.value.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n  return false;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectElement\");","map":{"version":3,"sources":["/Users/factweavers/Sites/haigreve-ui/src/Components/SelectElement/index.js"],"names":["React","Select","SelectElement","props","onBlur","onFocus","onSearch","val","showArrow","allowClear","showSearch","tokenSeparators","style","mode","placeholder","onChange","maxTagCount","defaultValue","value","className","isValid","filterOptions","optionList","map","label","input","option","toLowerCase","indexOf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,MAAvB;;AAEA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAW;AACtC,WAASC,MAAT,GAAkB,CAAE;;AAEpB,WAASC,OAAT,GAAmB,CAAE;;AAErB,WAASC,QAAT,CAAkBC,GAAlB,EAAuB,CAAE;;AAEzB,sBACE,QAAC,MAAD;AACE,IAAA,SAAS,EAAEJ,KAAK,CAACK,SADnB;AAEE,IAAA,UAAU,EAAEL,KAAK,CAACM,UAFpB;AAGE,IAAA,UAAU,EAAEN,KAAK,CAACO,UAHpB;AAIE,IAAA,eAAe,EAAEP,KAAK,CAACQ,eAJzB;AAKE,IAAA,KAAK,EAAER,KAAK,CAACS,KALf;AAME,IAAA,IAAI,EAAET,KAAK,CAACU,IANd;AAOE,IAAA,WAAW,EAAEV,KAAK,CAACW,WAAN,IAAqB,eAPpC;AAQE,IAAA,gBAAgB,EAAC,UARnB;AASE,IAAA,QAAQ,EAAEX,KAAK,CAACY,QATlB;AAUE,IAAA,OAAO,EAAEV,OAVX;AAWE,IAAA,MAAM,EAAED,MAXV;AAYE,IAAA,WAAW,EAAED,KAAK,CAACa,WAAN,IAAqB,EAZpC;AAaE,IAAA,QAAQ,EAAEb,KAAK,CAACO,UAAN,IAAoBJ,QAbhC;AAcE,IAAA,YAAY,EAAEH,KAAK,CAACc,YAdtB;AAeE,IAAA,KAAK,EAAEd,KAAK,CAACe,KAff;AAgBE,IAAA,SAAS,EAAG,GAAEf,KAAK,CAACgB,SAAN,IAAmB,EAAG,IAClC,CAAChB,KAAK,CAACiB,OAAP,GAAiB,cAAjB,GAAkC,EACnC,EAlBH;AAmBE,IAAA,YAAY,EAAEC,aAnBhB;AAoBE,IAAA,OAAO,EAAElB,KAAK,CAACmB,UAAN,CAAiBC,GAAjB,CAAqB;AAAA,UAAC;AAAEL,QAAAA,KAAF;AAASM,QAAAA;AAAT,OAAD;AAAA,aAAuB;AAAEN,QAAAA,KAAF;AAASM,QAAAA;AAAT,OAAvB;AAAA,KAArB;AApBX;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA/BM;KAAMtB,a;;AAiCb,SAASmB,aAAT,GAAgD;AAAA,MAAzBI,KAAyB,uEAAjB,EAAiB;AAAA,MAAbC,MAAa,uEAAJ,EAAI;AAC9C,MAAIA,MAAM,CAACvB,KAAP,IAAgBuB,MAAM,CAACvB,KAAP,CAAaqB,KAA7B,IAAsCE,MAAM,CAACvB,KAAP,CAAae,KAAvD,EACE,OACEQ,MAAM,CAACvB,KAAP,CAAaqB,KAAb,CAAmBG,WAAnB,GAAiCC,OAAjC,CAAyCH,KAAK,CAACE,WAAN,EAAzC,KAAiE,CAAjE,IACAD,MAAM,CAACvB,KAAP,CAAae,KAAb,CAAmBS,WAAnB,GAAiCC,OAAjC,CAAyCH,KAAK,CAACE,WAAN,EAAzC,KAAiE,CAFnE,CADF,KAKK,IAAID,MAAM,CAACR,KAAX,EACH,OAAOQ,MAAM,CAACR,KAAP,CAAaS,WAAb,GAA2BC,OAA3B,CAAmCH,KAAK,CAACE,WAAN,EAAnC,KAA2D,CAAlE;AACF,SAAO,KAAP;AACD","sourcesContent":["import React from 'react';\nimport { Select } from 'antd';\n\nexport const SelectElement = (props) => {\n  function onBlur() {}\n\n  function onFocus() {}\n\n  function onSearch(val) {}\n\n  return (\n    <Select\n      showArrow={props.showArrow}\n      allowClear={props.allowClear}\n      showSearch={props.showSearch}\n      tokenSeparators={props.tokenSeparators}\n      style={props.style}\n      mode={props.mode}\n      placeholder={props.placeholder || 'Select option'}\n      optionFilterProp=\"children\"\n      onChange={props.onChange}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      maxTagCount={props.maxTagCount || 10}\n      onSearch={props.showSearch && onSearch}\n      defaultValue={props.defaultValue}\n      value={props.value}\n      className={`${props.className || ''} ${\n        !props.isValid ? ' error-field' : ''\n      }`}\n      filterOption={filterOptions}\n      options={props.optionList.map(({ value, label }) => ({ value, label }))}\n    ></Select>\n  );\n};\n\nfunction filterOptions(input = '', option = {}) {\n  if (option.props && option.props.label && option.props.value)\n    return (\n      option.props.label.toLowerCase().indexOf(input.toLowerCase()) >= 0 ||\n      option.props.value.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    );\n  else if (option.value)\n    return option.value.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}