{"ast":null,"code":"var _jsxFileName = \"/Users/factweavers/Sites/haigreve-ui/src/Components/ContentLoader/index.js\";\n\n/* eslint-disable */\nimport React from 'react';\nimport style from './style.module.scss';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContentLoader = _ref => {\n  let {\n    height = 1,\n    width = 100,\n    number = 4,\n    spaceBetween = 0.5,\n    paragraphFactor = 1.15,\n    radius = 0.2,\n    hasWrapper = false\n  } = _ref;\n  // Add extra styles if needed here\n  let customLiStyle = {\n    minHeight: `${height}rem`,\n    width: `${width}%`,\n    marginBottom: `${spaceBetween}rem`,\n    borderRadius: `${radius}rem`\n  };\n  if (hasWrapper) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.loaderBlock,\n    children: createLoaders({\n      number,\n      customLiStyle,\n      paragraphDivisionFactor: paragraphFactor\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);else {\n    return createLoaders({\n      number: 1,\n      customLiStyle,\n      paragraphDivisionFactor: paragraphFactor\n    });\n  }\n}; // Creates the number of li based on the number (Default is 4)\n\n_c = ContentLoader;\n\nconst createLoaders = _ref2 => {\n  let {\n    number,\n    customLiStyle,\n    paragraphDivisionFactor\n  } = _ref2;\n  let loaders = [];\n\n  for (let index = 0; index < number; index++) {\n    if (index === 0) {\n      let customParagraphStyle = { ...customLiStyle\n      };\n      customParagraphStyle.width = `${parseInt(customParagraphStyle.width) / paragraphDivisionFactor}%`;\n      loaders.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.loaderElement,\n        style: customParagraphStyle\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this));\n    } else loaders.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.loaderElement,\n      style: customLiStyle\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this));\n  }\n\n  return loaders;\n};\n\nContentLoader.propTypes = {\n  height: PropTypes.number,\n  width: PropTypes.number,\n  number: PropTypes.number,\n  spaceBetween: PropTypes.number,\n  paragraphFactor: PropTypes.number,\n  radius: PropTypes.number\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ContentLoader\");","map":{"version":3,"sources":["/Users/factweavers/Sites/haigreve-ui/src/Components/ContentLoader/index.js"],"names":["React","style","PropTypes","ContentLoader","height","width","number","spaceBetween","paragraphFactor","radius","hasWrapper","customLiStyle","minHeight","marginBottom","borderRadius","loaderBlock","createLoaders","paragraphDivisionFactor","loaders","index","customParagraphStyle","parseInt","push","loaderElement","propTypes"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AACA,OAAO,MAAMC,aAAa,GAAG,QAQvB;AAAA,MARwB;AAC5BC,IAAAA,MAAM,GAAG,CADmB;AAE5BC,IAAAA,KAAK,GAAG,GAFoB;AAG5BC,IAAAA,MAAM,GAAG,CAHmB;AAI5BC,IAAAA,YAAY,GAAG,GAJa;AAK5BC,IAAAA,eAAe,GAAG,IALU;AAM5BC,IAAAA,MAAM,GAAG,GANmB;AAO5BC,IAAAA,UAAU,GAAG;AAPe,GAQxB;AACJ;AACA,MAAIC,aAAa,GAAG;AAClBC,IAAAA,SAAS,EAAG,GAAER,MAAO,KADH;AAElBC,IAAAA,KAAK,EAAG,GAAEA,KAAM,GAFE;AAGlBQ,IAAAA,YAAY,EAAG,GAAEN,YAAa,KAHZ;AAIlBO,IAAAA,YAAY,EAAG,GAAEL,MAAO;AAJN,GAApB;AAMA,MAAIC,UAAJ,EACE,oBACE;AAAK,IAAA,SAAS,EAAET,KAAK,CAACc,WAAtB;AAAA,cACGC,aAAa,CAAC;AACbV,MAAAA,MADa;AAEbK,MAAAA,aAFa;AAGbM,MAAAA,uBAAuB,EAAET;AAHZ,KAAD;AADhB;AAAA;AAAA;AAAA;AAAA,UADF,CADF,KAUK;AACH,WAAOQ,aAAa,CAAC;AACnBV,MAAAA,MAAM,EAAE,CADW;AAEnBK,MAAAA,aAFmB;AAGnBM,MAAAA,uBAAuB,EAAET;AAHN,KAAD,CAApB;AAKD;AACF,CAjCM,C,CAkCP;;KAlCaL,a;;AAmCb,MAAMa,aAAa,GAAG,SAAwD;AAAA,MAAvD;AAAEV,IAAAA,MAAF;AAAUK,IAAAA,aAAV;AAAyBM,IAAAA;AAAzB,GAAuD;AAC5E,MAAIC,OAAO,GAAG,EAAd;;AACA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGb,MAA5B,EAAoCa,KAAK,EAAzC,EAA6C;AAC3C,QAAIA,KAAK,KAAK,CAAd,EAAiB;AACf,UAAIC,oBAAoB,GAAG,EAAE,GAAGT;AAAL,OAA3B;AACAS,MAAAA,oBAAoB,CAACf,KAArB,GAA8B,GAC5BgB,QAAQ,CAACD,oBAAoB,CAACf,KAAtB,CAAR,GAAuCY,uBACxC,GAFD;AAGAC,MAAAA,OAAO,CAACI,IAAR,eACE;AAEE,QAAA,SAAS,EAAErB,KAAK,CAACsB,aAFnB;AAGE,QAAA,KAAK,EAAEH;AAHT,SACOD,KADP;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KAZD,MAaED,OAAO,CAACI,IAAR,eACE;AAEE,MAAA,SAAS,EAAErB,KAAK,CAACsB,aAFnB;AAGE,MAAA,KAAK,EAAEZ;AAHT,OACOQ,KADP;AAAA;AAAA;AAAA;AAAA,YADF;AAOH;;AACD,SAAOD,OAAP;AACD,CAzBD;;AA0BAf,aAAa,CAACqB,SAAd,GAA0B;AACxBpB,EAAAA,MAAM,EAAEF,SAAS,CAACI,MADM;AAExBD,EAAAA,KAAK,EAAEH,SAAS,CAACI,MAFO;AAGxBA,EAAAA,MAAM,EAAEJ,SAAS,CAACI,MAHM;AAIxBC,EAAAA,YAAY,EAAEL,SAAS,CAACI,MAJA;AAKxBE,EAAAA,eAAe,EAAEN,SAAS,CAACI,MALH;AAMxBG,EAAAA,MAAM,EAAEP,SAAS,CAACI;AANM,CAA1B","sourcesContent":["/* eslint-disable */\nimport React from 'react';\nimport style from './style.module.scss';\nimport PropTypes from 'prop-types';\nexport const ContentLoader = ({\n  height = 1,\n  width = 100,\n  number = 4,\n  spaceBetween = 0.5,\n  paragraphFactor = 1.15,\n  radius = 0.2,\n  hasWrapper = false,\n}) => {\n  // Add extra styles if needed here\n  let customLiStyle = {\n    minHeight: `${height}rem`,\n    width: `${width}%`,\n    marginBottom: `${spaceBetween}rem`,\n    borderRadius: `${radius}rem`,\n  };\n  if (hasWrapper)\n    return (\n      <div className={style.loaderBlock}>\n        {createLoaders({\n          number,\n          customLiStyle,\n          paragraphDivisionFactor: paragraphFactor,\n        })}\n      </div>\n    );\n  else {\n    return createLoaders({\n      number: 1,\n      customLiStyle,\n      paragraphDivisionFactor: paragraphFactor,\n    });\n  }\n};\n// Creates the number of li based on the number (Default is 4)\nconst createLoaders = ({ number, customLiStyle, paragraphDivisionFactor }) => {\n  let loaders = [];\n  for (let index = 0; index < number; index++) {\n    if (index === 0) {\n      let customParagraphStyle = { ...customLiStyle };\n      customParagraphStyle.width = `${\n        parseInt(customParagraphStyle.width) / paragraphDivisionFactor\n      }%`;\n      loaders.push(\n        <div\n          key={index}\n          className={style.loaderElement}\n          style={customParagraphStyle}\n        />\n      );\n    } else\n      loaders.push(\n        <div\n          key={index}\n          className={style.loaderElement}\n          style={customLiStyle}\n        />\n      );\n  }\n  return loaders;\n};\nContentLoader.propTypes = {\n  height: PropTypes.number,\n  width: PropTypes.number,\n  number: PropTypes.number,\n  spaceBetween: PropTypes.number,\n  paragraphFactor: PropTypes.number,\n  radius: PropTypes.number,\n};\n"]},"metadata":{},"sourceType":"module"}