{"ast":null,"code":"var _jsxFileName = \"/Users/factweavers/Sites/haigreve-ui/src/Components/DatePicker/index.js\";\nimport React, { Component } from 'react';\nimport { DatePicker } from 'antd';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DatePickerElement extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.onChange = (range, dateString) => {\n      this.props.handleChange && this.props.handleChange({ ...this.props,\n        range,\n        dateString\n      }, dateString);\n    };\n\n    this.disabledDateToday = current => {\n      // Can not select days before today and today\n      return current && current.valueOf() < moment().endOf('day');\n    };\n\n    this.disabledPrevious = current => {\n      // Can not select days before today\n      return current && current.valueOf() < moment().add(-1, 'day');\n    };\n\n    this.disabledAfter = current => {\n      // Can not select days after today\n      return current && moment(current).startOf('day') > moment().endOf('day');\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(DatePicker, {\n      allowClear: true,\n      showNow: false,\n      selected: this.props.value == '' ? moment() : moment(this.props.value, 'DD/MM/YYYY'),\n      showTime: this.props.showTime ? {\n        format: 'HH:mm'\n      } : null,\n      ...this.props,\n      value: this.props.value,\n      disabledDate: this.props.disableToday ? this.disabledDateToday : this.props.disablePrevious ? this.disabledPrevious : this.props.disabledAfter ? this.disabledAfter : this.props.disabledDate,\n      onChange: this.onChange,\n      inputReadOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/factweavers/Sites/haigreve-ui/src/Components/DatePicker/index.js"],"names":["React","Component","DatePicker","moment","DatePickerElement","onChange","range","dateString","props","handleChange","disabledDateToday","current","valueOf","endOf","disabledPrevious","add","disabledAfter","startOf","render","value","showTime","format","disableToday","disablePrevious","disabledDate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,eAAe,MAAMC,iBAAN,SAAgCH,SAAhC,CAA0C;AAAA;AAAA;;AAAA,SACvDI,QADuD,GAC5C,CAACC,KAAD,EAAQC,UAAR,KAAuB;AAChC,WAAKC,KAAL,CAAWC,YAAX,IACE,KAAKD,KAAL,CAAWC,YAAX,CAAwB,EAAE,GAAG,KAAKD,KAAV;AAAiBF,QAAAA,KAAjB;AAAwBC,QAAAA;AAAxB,OAAxB,EAA8DA,UAA9D,CADF;AAED,KAJsD;;AAAA,SAMvDG,iBANuD,GAMlCC,OAAD,IAAa;AAC/B;AACA,aAAOA,OAAO,IAAIA,OAAO,CAACC,OAAR,KAAoBT,MAAM,GAAGU,KAAT,CAAe,KAAf,CAAtC;AACD,KATsD;;AAAA,SAWvDC,gBAXuD,GAWnCH,OAAD,IAAa;AAC9B;AACA,aAAOA,OAAO,IAAIA,OAAO,CAACC,OAAR,KAAoBT,MAAM,GAAGY,GAAT,CAAa,CAAC,CAAd,EAAiB,KAAjB,CAAtC;AACD,KAdsD;;AAAA,SAgBvDC,aAhBuD,GAgBtCL,OAAD,IAAa;AAC3B;AACA,aAAOA,OAAO,IAAIR,MAAM,CAACQ,OAAD,CAAN,CAAgBM,OAAhB,CAAwB,KAAxB,IAAiCd,MAAM,GAAGU,KAAT,CAAe,KAAf,CAAnD;AACD,KAnBsD;AAAA;;AAqBvDK,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,UAAD;AACE,MAAA,UAAU,EAAE,IADd;AAEE,MAAA,OAAO,EAAE,KAFX;AAGE,MAAA,QAAQ,EACN,KAAKV,KAAL,CAAWW,KAAX,IAAoB,EAApB,GACIhB,MAAM,EADV,GAEIA,MAAM,CAAC,KAAKK,KAAL,CAAWW,KAAZ,EAAmB,YAAnB,CANd;AAQE,MAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWY,QAAX,GAAsB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAtB,GAA4C,IARxD;AAAA,SASM,KAAKb,KATX;AAUE,MAAA,KAAK,EAAE,KAAKA,KAAL,CAAWW,KAVpB;AAWE,MAAA,YAAY,EACV,KAAKX,KAAL,CAAWc,YAAX,GACI,KAAKZ,iBADT,GAEI,KAAKF,KAAL,CAAWe,eAAX,GACA,KAAKT,gBADL,GAEA,KAAKN,KAAL,CAAWQ,aAAX,GACA,KAAKA,aADL,GAEA,KAAKR,KAAL,CAAWgB,YAlBnB;AAoBE,MAAA,QAAQ,EAAE,KAAKnB,QApBjB;AAqBE,MAAA,aAAa,EAAE;AArBjB;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;;AA/CsD","sourcesContent":["import React, { Component } from 'react';\nimport { DatePicker } from 'antd';\nimport moment from 'moment';\n\nexport default class DatePickerElement extends Component {\n  onChange = (range, dateString) => {\n    this.props.handleChange &&\n      this.props.handleChange({ ...this.props, range, dateString }, dateString);\n  };\n\n  disabledDateToday = (current) => {\n    // Can not select days before today and today\n    return current && current.valueOf() < moment().endOf('day');\n  };\n\n  disabledPrevious = (current) => {\n    // Can not select days before today\n    return current && current.valueOf() < moment().add(-1, 'day');\n  };\n\n  disabledAfter = (current) => {\n    // Can not select days after today\n    return current && moment(current).startOf('day') > moment().endOf('day');\n  };\n\n  render() {\n    return (\n      <DatePicker\n        allowClear={true}\n        showNow={false}\n        selected={\n          this.props.value == ''\n            ? moment()\n            : moment(this.props.value, 'DD/MM/YYYY')\n        }\n        showTime={this.props.showTime ? { format: 'HH:mm' } : null}\n        {...this.props}\n        value={this.props.value}\n        disabledDate={\n          this.props.disableToday\n            ? this.disabledDateToday\n            : this.props.disablePrevious\n            ? this.disabledPrevious\n            : this.props.disabledAfter\n            ? this.disabledAfter\n            : this.props.disabledDate\n        }\n        onChange={this.onChange}\n        inputReadOnly={true}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}